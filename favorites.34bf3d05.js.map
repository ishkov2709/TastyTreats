{"mappings":"0jBAUMA,EAAO,CACXC,uBAAwBC,SAASC,cAAc,wBAC/CC,oBAAqBF,SAASC,cAAc,kBAC5CE,QAASH,SAASC,cAAc,KAChCG,cAAeJ,SAASK,eAAe,cACvCC,YAAaN,SAASC,cAAc,yBAStC,SAASM,IACP,IAAMC,EAAcC,OAAOC,WAE3B,OAAIF,EAAc,IACT,EAGLA,GAAe,IACV,QADT,C,CAKF,SAASG,EAAaC,EAAOC,GAE3B,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,GAAKF,EAAW,CAEhDC,EADkBG,KAAKC,MAAMH,EAAIF,GAAa,GAC1BD,EAAMO,MAAMJ,EAAGA,EAAIF,E,CAEzC,OAAOC,C,CAYT,SAASM,I,IAAoBC,EAAAC,UAAAN,OAAA,YAAAM,UAAA,GAAWA,UAAA,GAAD,EAC/BC,EAAUC,aAAaC,QAAQ,aAC/BC,EAAOC,KAAKC,MAAML,GACxB,GAAIA,EAAS,CACX,IAAMM,EAAUtB,IACVuB,EAAUnB,EAAae,EAAMG,GAC7BE,EAAaC,OAAOC,KAAKH,GAASd,OAEpCe,EAAa,GACfjC,EAAKM,cAAc8B,MAAMC,QAAU,SACnC,EAAAC,EAAAC,SAAgBhB,EAASQ,EAASE,EAAYX,IAE9CtB,EAAKM,cAAc8B,MAAMC,QAAU,OAGrC,IAAMG,EAAaR,EAAQT,GAASkB,QAClC,SAACC,EAAMC,G,IAAIC,EAAKD,EAALC,MAAOC,EAAWF,EAAXE,YAAaC,EAAOH,EAAPG,QAASC,EAAMJ,EAANI,OAAQC,EAAEL,EAAFK,G,OAC9CN,GAAS,EAAAO,EAAAV,SAAWK,EAAOC,EAAaC,EAASC,EAAQC,E,GAC3D,IAGFhD,EAAKI,oBAAoB8C,UAAYV,EAErCxC,EAAKK,QAAQ8C,UAAUC,OAAO,W,EA3DlCC,QAAQC,IAAItD,EAAKK,SAGjBH,SAASqD,iBAAiB,oBAwB1B,WAEE,IAAMC,GAmCA/B,EAAUC,aAAaC,QAAQ,aAC/BC,EAAOC,KAAKC,MAAML,GACxB4B,QAAQC,IAAI1B,GACRH,EACKG,EACJ6B,SAAQ,SAAAC,G,OAAUA,EAAOC,Q,IACzBC,QAAO,SAACD,EAAUE,EAAO/C,G,OAAUA,EAAMgD,QAAQH,KAAcE,C,IAC/DpB,QACC,SAACe,EAAgBG,G,OAAaH,EAOtC,SAAwBG,GACtB,MAAO,kCAA2CI,OAATJ,EAAS,iB,CARGK,CAAeL,E,GAC9D,IAGC,IAbT,IACQlC,EACAG,EAjCN5B,EAAKC,uBAAuBgE,mBAAmB,YAAaT,GAC5DlC,G,IA7BFtB,EAAKK,QAAQ8C,UAAUe,IAAI,YA+E3BlE,EAAKQ,YAAY+C,iBAAiB,SAElC,SAA0BY,GACxBnE,EAAKI,oBAAoB8C,UAAY,GACrC,IAAMkB,EAAaD,EAAIE,OAAOC,YACxB7C,EAAUC,aAAaC,QAAQ,aAE/B4C,EADO1C,KAAKC,MAAML,GACKmC,QAAO,SAAAF,G,OAAUA,EAAOC,WAAaS,C,IAClEf,QAAQC,IAAIiB,GACZ,IAAM7B,EAMR,SAAgC6B,GAC9B,OAAOA,EAAgB9B,QACrB,SAACC,EAAMC,G,IAAIC,EAAKD,EAALC,MAAOC,EAAWF,EAAXE,YAAaC,EAAOH,EAAPG,QAASC,EAAMJ,EAANI,OAAQC,EAAEL,EAAFK,G,OAC9CN,GAAS,EAAAO,EAAAV,SAAWK,EAAOC,EAAaC,EAASC,EAAQC,E,GAC3D,G,CAVawB,CAAuBD,GAEtC,GADAlB,QAAQC,IAAIZ,IACPA,EAAQ,MAAM,IAAI+B,MAAM,aAC7BzE,EAAKI,oBAAoB6D,mBAAmB,YAAavB,E","sources":["src/favorites.js"],"sourcesContent":["import './js/utils/localSctorage';\nimport './js/utils/switchTheme.js';\nimport './js/utils/mobile-menu.js';\nimport './js/utils/setClass.js';\n\nimport { OpenModal } from './js/utils/modal-recipes.js';\nimport renderItem from './js/renders/renders.js';\nimport startPagination from './js/utils/pagination';\n// import {hendleClickOnRecipes} from './js/renders/search.js';\n\nconst refs = {\n  favoriteCategoriesList: document.querySelector('.favorite-categories'),\n  favoriteRecipesList: document.querySelector('.favorite-list'),\n  warning: document.querySelector('p'),\n  paginationBox: document.getElementById('pagination'),\n  categoryBtn: document.querySelector('.favorite-categories'),\n};\n\nconsole.log(refs.warning);\n// localStorage.clear()\n\ndocument.addEventListener('DOMContentLoaded', onFavoritesRealod);\nrefs.warning.classList.add('isHidden');\n\nfunction calcPages() {\n  const screenWidth = window.innerWidth;\n\n  if (screenWidth < 768) {\n    return 9;\n  }\n\n  if (screenWidth >= 768) {\n    return 12;\n  }\n}\n\nfunction groupObjects(array, groupSize) {\n  const result = {};\n  for (let i = 0; i < array.length; i += groupSize) {\n    const groupName = Math.floor(i / groupSize) + 1;\n    result[groupName] = array.slice(i, i + groupSize);\n  }\n  return result;\n}\n\nfunction onFavoritesRealod() {\n  // const markup = generateStorageList();\n  const categoryMarkup = generateCategoryList();\n  // if (!markup) throw new Error('No result');\n  // refs.favoriteRecipesList.insertAdjacentHTML('beforeend', markup);\n  refs.favoriteCategoriesList.insertAdjacentHTML('beforeend', categoryMarkup);\n  generateStorageList();\n}\n\nfunction generateStorageList(pageSet = 1) {\n  const storage = localStorage.getItem('favorites');\n  const data = JSON.parse(storage);\n  if (storage) {\n    const perPage = calcPages();\n    const objData = groupObjects(data, perPage);\n    const totalPages = Object.keys(objData).length;\n\n    if (totalPages > 1) {\n      refs.paginationBox.style.display = 'block';\n      startPagination(pageSet, perPage, totalPages, generateStorageList);\n    } else {\n      refs.paginationBox.style.display = 'none';\n    }\n\n    const listMarkup = objData[pageSet].reduce(\n      (markup, { title, description, preview, rating, id }) =>\n        markup + renderItem(title, description, preview, rating, id),\n      ''\n    );\n\n    refs.favoriteRecipesList.innerHTML = listMarkup;\n\n    refs.warning.classList.remove('isHidden');\n  }\n}\n\nfunction generateCategoryList() {\n  const storage = localStorage.getItem('favorites');\n  const data = JSON.parse(storage);\n  console.log(data);\n  if (storage) {\n    return data\n      .flatMap(recipe => recipe.category)\n      .filter((category, index, array) => array.indexOf(category) === index)\n      .reduce(\n        (categoryMarkup, category) => categoryMarkup + renderCategory(category),\n        ''\n      );\n  }\n  return '';\n}\n\nfunction renderCategory(category) {\n  return `<li><button class=\"button-fav\">${category}</button></li>`;\n}\n\nrefs.categoryBtn.addEventListener('click', filterByCategory);\n\nfunction filterByCategory(evt) {\n  refs.favoriteRecipesList.innerHTML = '';\n  const currentBtn = evt.target.textContent;\n  const storage = localStorage.getItem('favorites');\n  const data = JSON.parse(storage);\n  const categoryRecipes = data.filter(recipe => recipe.category === currentBtn);\n  console.log(categoryRecipes);\n  const markup = generateCategoryMarkup(categoryRecipes);\n  console.log(markup);\n  if (!markup) throw new Error('No result');\n  refs.favoriteRecipesList.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction generateCategoryMarkup(categoryRecipes) {\n  return categoryRecipes.reduce(\n    (markup, { title, description, preview, rating, id }) =>\n      markup + renderItem(title, description, preview, rating, id),\n    ''\n  );\n}\n"],"names":["$f872ae3cf3d9dd7f$var$refs","favoriteCategoriesList","document","querySelector","favoriteRecipesList","warning","paginationBox","getElementById","categoryBtn","$f872ae3cf3d9dd7f$var$calcPages","screenWidth","window","innerWidth","$f872ae3cf3d9dd7f$var$groupObjects","array","groupSize","result","i","length","Math","floor","slice","$f872ae3cf3d9dd7f$var$generateStorageList","pageSet","arguments","storage","localStorage","getItem","data","JSON","parse","perPage","objData","totalPages","Object","keys","style","display","$5IDkG","default","listMarkup","reduce","markup","param","title","description","preview","rating","id","$7Mtae","innerHTML","classList","remove","console","log","addEventListener","categoryMarkup","flatMap","recipe","category","filter","index","indexOf","concat","$f872ae3cf3d9dd7f$var$renderCategory","insertAdjacentHTML","add","evt","currentBtn","target","textContent","categoryRecipes","$f872ae3cf3d9dd7f$var$generateCategoryMarkup","Error"],"version":3,"file":"favorites.34bf3d05.js.map"}